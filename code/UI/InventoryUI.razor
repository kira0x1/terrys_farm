@using System
@using Kira
@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent


@if (playerUI.TabSelected != PlayerUI.TabTypes.Inventory) return;
<root>
    <div class="container">
        @{
            for (var i = 0; i < Seeds.Count; i++)
            {
                var cname = "slot";

                if (HasItemSelected && ItemSelectedId == i)
                {
                    cname += " active";
                }

                InventoryItem item = Seeds[i];

                int i1 = i;
                <div class=@cname onclick="@(() => OnItemClicked(i1))">
                    <div class="amount">@item.Amount</div>
                    <i>@item.Seed.Icon</i>
                </div>
            }
        }
    </div>

</root>

@code
{
    public int Slots = 0;
    private Player player;
    private PlayerUI playerUI;

    public bool HasItemSelected { get; set; } = false;
    private int ItemSelectedId { get; set; } = 0;

    private List<InventoryItem> Seeds => player.Seeds.Values.ToList();


    private void OnSlotClicked(CategoryTypes category)
    {
        HasItemSelected = false;
    }

    protected override void OnAwake()
    {
        base.OnAwake();
        playerUI = Components.Get<PlayerUI>();
        player = Scene.Components.GetAll<Player>().FirstOrDefault();
    }

    private void OnItemClicked(int i)
    {
        if (HasItemSelected && ItemSelectedId == i)
        {
            HasItemSelected = false;
            return;
        }
    }


    /// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine(HasItemSelected, ItemSelectedId, playerUI.TabSelected, player.Seeds);
}
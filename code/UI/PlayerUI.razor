@using Kira
@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
    <div class="resources-container">
        <div class="resource">
            <i>hub</i>
            <div class="resource-text">@player.Gold</div>
        </div>
    </div>

    <div class="toolbar">
        <div class="container">

            @for (var i = 0; i < Tools.Length; i++)
            {
                ToolData tool = Tools[i];
                var cname = "slot";

                if (HasToolSelected && ToolSelected == i)
                {
                    cname += " active";
                }

                int i1 = i;
                <div class=@cname onclick="@(() => OnToolClicked(i1))">
                    <i>@tool.Icon</i>
                </div>
            }

        </div>
    </div>
</root>

@code
{
    public int ToolSelected { get; set; } = 0;
    public bool HasToolSelected { get; set; } = false;

    private ToolData[] Tools { get; set; }
    private Player player { get; set; }
    private InspectUI inspectUi { get; set; }


    protected override void OnAwake()
    {
        base.OnAwake();
        player = Scene.Components.GetAll<Player>().FirstOrDefault();
        inspectUi = Scene.Components.GetAll<InspectUI>().FirstOrDefault();

        var data = Util.LoadData();
        Tools = data.Tools;
    }

    /// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine(ToolSelected, HasToolSelected, player.Gold);

    private void OnToolClicked(int i)
    {
        if (HasToolSelected && ToolSelected == i)
        {
            HasToolSelected = false;
        }
        else
        {
            ToolSelected = i;
            HasToolSelected = true;
        }

        inspectUi.IsInspectOn = i == 0 && HasToolSelected;
    }
}
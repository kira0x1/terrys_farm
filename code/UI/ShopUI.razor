@using System
@using Kira
@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent


@if (playerUI.TabSelected != PlayerUI.TabTypes.Shop) return;
<root>
    <div class="sidebar">
        @foreach (CategoryData c in Categories)
        {
            var cname = "slot";

            if (CategorySelectedType == c.CategoryType)
            {
                cname += " active";
            }

            <div class=@cname onclick="@(() => OnSlotClicked(c.CategoryType))">
                <i>@c.Icon</i>
            </div>
        }
    </div>
    <div class="container">
        @{
            CategoryData categorySelected = Categories.Single(c => c.CategoryType == CategorySelectedType);
            for (var i = 0; i < categorySelected.Items.Length; i++)
            {
                var cname = "slot";

                // if (HasItemSelected && ItemSelectedId == i)
                // {
                //     cname += " active";
                // }

                CategoryItem item = categorySelected.Items[i];

                if (item.Cost > player.Gold)
                {
                    cname = "slot disabled";
                }


                int i1 = i;
                <div class=@cname onclick="@(() => OnItemClicked(i1))">
                    <i>@item.Icon</i>
                </div>
            }
        }
    </div>

</root>

@code
{


    public int Slots = 0;
    private Player player;
    private PlayerUI playerUI;


    public CategoryData[] Categories;
    public CategoryTypes CategorySelectedType { get; set; } = CategoryTypes.Seeds;
    public CategoryData CategorySelected { get; set; }

    private void OnSlotClicked(CategoryTypes category)
    {
        CategorySelectedType = category;
        CategorySelected = Categories.Single(c => c.CategoryType == CategorySelectedType);
    }

    protected override void OnAwake()
    {
        base.OnAwake();
        playerUI = Components.Get<PlayerUI>();
        player = Scene.Components.GetAll<Player>().FirstOrDefault();
    }

    protected override void OnStart()
    {
        base.OnStart();
        Categories = Player.GameData.Categories;
        CategorySelected = Categories[0];
    }

    private void OnItemClicked(int i)
    {
        if (player.Gold >= CategorySelected.Items[i].Cost)
        {
            player.AddToInventory(CategorySelected.Items[i], CategorySelectedType);
        }
    }


    /// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine(CategorySelectedType, player.Gold, playerUI.TabSelected);
}